#!/bin/bash

# Load to current shell:
#
#   . ./eiinerc
#
# Functions:
#
# * eiine-start
#   start all eiine instances and all apps
#
# * eiine-stop
#   stop all eiine instances and all apps
#
# * eiine-show-instances
#   show all eiine instance ids
#
# * eiine-reload-instances-status
#   run ec2-describe-instances and save the result to a temporary file
#
# * eiine-show-instances-status
#   show status
#
# * eiine-start-instances
#   start all eiine instances
#
# * eiine-stop-instances
#   stop all eiine instances
#
# * eiine-wait-for-running
# * eiine-wait-for-stopped
# * eiine-wait-for
# * eiine-show-instances-dns
# * eiine-mongo-dns
# * eiine-setup-config-yml
# * eiine-start-app
#
# Environemnt variables:
#
# * EC2_DESCRIBE_INSTANCES_TMP
#   path to a temporary file for ec2-describe-instances
#
# * EC2_KEY
#   path to the key file for the EC2 instances

export EC2_DESCRIBE_INSTANCES_TMP=/tmp/instances

export EC2_KEY=$HOME/.aws-keys/first.pem

function eiine-show-instances
{
    cat <<EOF | grep "$1\$" | awk '{print $1}'
i-78baed7a app
i-16aef914 mongo
i-82de8980 app
EOF
}

function eiine-show-instances-status
{
    cat $EC2_DESCRIBE_INSTANCES_TMP | grep '^INSTANCE' | cut -f2,6
}

function _eiine-wait-for-ssh
{
    while ! ssh -i ~/.aws-keys/first.pem -o StrictHostKeyChecking=no -o ConnectTimeout=3 $1 'hostname>/dev/null'; do ; done
}

function eiine-wait-for-ssh-all
{
    for i in `eiine-show-instances`; do
        dns=$(eiine-show-instances-dns $i)
        echo $dns
        _eiine-wait-for-ssh ubuntu@$dns
    done
}

function _eiine-wait-for
{
    while [ "$(eiine-reload-instances-status && eiine-show-instances-status | grep -v $1 | wc -l)" != "0" ]; do
        echo waiting...
        sleep 5
    done
}

function eiine-wait-for-running
{
    _eiine-wait-for running
}

function eiine-wait-for-stopped
{
    _eiine-wait-for stopped
}

function eiine-start-instances
{
    eiine-show-instances | xargs ec2-start-instances
}

function eiine-stop-instances
{
    eiine-show-instances | xargs ec2-stop-instances
}

function eiine-reload-instances-status
{
    ec2-describe-instances > $EC2_DESCRIBE_INSTANCES_TMP
}

function eiine-show-instances-dns
{
    cat $EC2_DESCRIBE_INSTANCES_TMP | grep '^INSTANCE' | grep "$1" |awk '{print $4}'
}

function eiine-mongo-dns
{
    for i in `eiine-show-instances mongo`; do eiine-show-instances-dns $i; done
}

function eiine-setup-config-yml
{
    cat <<EOF | ssh -i $EC2_KEY -o StrictHostKeyChecking=no ubuntu@$1 'bash -l'
cp ~/eiine/config/config.yml.example ~/eiine/config/config.yml
EOF
    cat <<EOF | ssh -i $EC2_KEY -o StrictHostKeyChecking=no ubuntu@$1 'ed ~/eiine/config/config.yml'
/hostname
c
hostname: $dns
.
/mongo_host
c
mongo_host: $(eiine-mongo-dns)
.
/banning
c
banning: true
.
w
q
EOF
}

function eiine-update-app
{
    cat <<EOF | ssh -i $EC2_KEY -o StrictHostKeyChecking=no ubuntu@$1 'bash -l'
cd ~/eiine
git pull
bundle install
EOF
}

function eiine-start-app
{
    cat <<EOF | ssh -i $EC2_KEY -o StrictHostKeyChecking=no ubuntu@$1 'bash -l'
cd ~/eiine
(cd ./bin && ./collector restart)
(cd ./bin && ./counter restart)
bundle exec thin stop -d
bundle exec thin start -d
EOF
}

function eiine-start-apps
{
    eiine-reload-instances-status
    for i in `eiine-show-instances app`; do
        dns=$(eiine-show-instances-dns $i)
        echo SETUP: $dns
        eiine-update-app $dns
        eiine-setup-config-yml $dns
        eiine-start-app $dns
    done
    eiine-start-elb
}

function eiine-start-all
{
    eiine-start-instances
    eiine-wait-for-running
    eiine-wait-for-ssh-all
    eiine-start-apps
    eiine-start-elb
}

function eiine-restart-apps
{
    eiine-reload-instances-status
    for i in `eiine-show-instances app`; do
        dns=$(eiine-show-instances-dns $i)
        echo SETUP: $dns
        eiine-setup-config-yml $dns
        eiine-start-app $dns
    done
    eiine-start-elb
}

function eiine-stop-all
{
    eiine-stop-instances
    eiine-wait-for-stopped
}

function eiine-start-elb
{
    elb-deregister-instances-from-lb eiine --instances $(elb-describe-instance-health eiine | awk '{print $2}')
    elb-register-instances-with-lb eiine --instances $(eiine-instances app)
    elb-describe-lbs eiine
}
